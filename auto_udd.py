import os
import platform
import pyppeteer
import asyncio

def get_all_udds():
    system = platform.system()
    home = os.path.expanduser("~")

    # Paths was generated by ChatGPT, if you find any errors please report.
    
    paths = {
        'Chrome': {
            'Windows': os.path.join(os.getenv('LOCALAPPDATA'), 'Google', 'Chrome', 'User Data'),
            'Darwin': os.path.join(home, 'Library', 'Application Support', 'Google', 'Chrome'),
            'Linux': os.path.join(home, '.config', 'google-chrome')
        },
        'Edge': {
            'Windows': os.path.join(os.getenv('LOCALAPPDATA'), 'Microsoft', 'Edge', 'User Data'),
            'Darwin': os.path.join(home, 'Library', 'Application Support', 'Microsoft Edge'),
            'Linux': os.path.join(home, '.config', 'microsoft-edge')
        },
        'Brave': {
            'Windows': os.path.join(os.getenv('LOCALAPPDATA'), 'BraveSoftware', 'Brave-Browser', 'User Data'),
            'Darwin': os.path.join(home, 'Library', 'Application Support', 'BraveSoftware', 'Brave-Browser'),
            'Linux': os.path.join(home, '.config', 'BraveSoftware', 'Brave-Browser')
        },
        'Chromium': {
            'Windows': os.path.join(os.getenv('LOCALAPPDATA'), 'Chromium', 'User Data'),
            'Darwin': os.path.join(home, 'Library', 'Application Support', 'Chromium'),
            'Linux': os.path.join(home, '.config', 'chromium')
        }
    }
    
    existing_dirs = {}
    
    for browser, path_dict in paths.items():
        path = path_dict.get(system)
        if path and os.path.exists(path):
            existing_dirs[browser] = path
    
    return existing_dirs

async def testpyptr():
    
    udd = os.path.join(os.getenv('LOCALAPPDATA'), 'Chromium', 'User Data')
    exec = 'chromium/chrome.exe'
    
    browser = await pyppeteer.launch(headless=False, userDataDir=udd, executablePath=exec)
    await browser.newPage()

# asyncio.run(main())